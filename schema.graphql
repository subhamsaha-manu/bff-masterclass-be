type Query {
  login(input: LoginUserInput!): AuthPayload!
  currentUser: User
}

input LoginUserInput {
  email: String!
  password: String!
}

type AuthPayload {
  token: String!
  uuid: ID!
  code: Int
  message: String
  name: String
}

type User {
  uuid: ID!
  name: String!
  email: String!
}

directive @entity(embedded: Boolean) on OBJECT

directive @chimp(embedded: Boolean) on OBJECT

directive @column(overrideType: String) on FIELD_DEFINITION

directive @id on FIELD_DEFINITION

directive @computed on FIELD_DEFINITION

directive @link(overrideType: String) on FIELD_DEFINITION

directive @embedded on FIELD_DEFINITION

directive @map(path: String!) on FIELD_DEFINITION

directive @union(discriminatorField: String) on UNION

input AdditionalEntityFields {
  path: String
  type: String
}

schema {
  query: Query
}

